/*****************************************************************************
 * Copyright (C) 2007 Jean-Daniel Fekete and INRIA, France                  *
 * ------------------------------------------------------------------------- *
 * This software is published under the terms of the X11 Software License    *
 * a copy of which has been included with this distribution in the           *
 * license.txt file.                                                         *
 *****************************************************************************/
package infovis.graph.io;

import infovis.Graph;
import infovis.io.AbstractWriter;
import infovis.utils.RowIterator;

import java.io.IOException;
import java.io.OutputStream;

/**
 * <b>TlpGraphWriter</b> is a Graph Writer for the Tulip format.
 * 
 * @author Jean-Daniel Fekete
 * @version $Revision: 1.1 $
 * @infovis.factory GraphWriterFactory tlp Tulip
 */
public class TlpGraphWriter extends AbstractWriter {
    protected Graph graph;
    /**
     * Creates a TlpGraphWriter on a specified stream.
     * @param out the stream
     * @param name the name
     * @param graph the graph
     */
    public TlpGraphWriter(OutputStream out, String name, Graph graph) {
        super(out, name, graph.getEdgeTable());
        this.graph = graph;
    }

    /**
     * {@inheritDoc}
     */
    public boolean write() {
        try {
            write("(tlp \"2.0\"\n");
            write("(comment \"This file was generated by the InfoVis Toolkit\")\n");
            write("(nodes");
            for (RowIterator iter = graph.vertexIterator(); iter.hasNext(); ) {
                int v = iter.nextRow();
                write(" "+v);
            }
            write(")\n");
            for (RowIterator eiter = graph.edgeIterator(); eiter.hasNext(); ) {
                int e = eiter.nextRow();
                int v1 = graph.getFirstVertex(e);
                int v2 = graph.getSecondVertex(e);
                write("(edge "+e+" "+v1+" "+v2+")\n");
            }

            write(")\n");
            flush();
        }
        catch(IOException e) {
            return false;
        }
        return true;
    }

}
